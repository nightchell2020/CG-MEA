Error executing job with overrides: ['data=caueeg-dementia', 'train=ddp-amp-gradclip-distillation', 'data.EKG=O', 'data.awgn=0.09493020189676876', 'data.awgn_age=0.08620705992052446', 'data.mgn=0.04061231182489346', 'data.photic=X', 'data.seq_length=2000', 'model=2D-ViT-B-16', 'model.activation=relu', 'model.dropout=0.12942536534224264', 'model.fc_stages=2', 'model.use_age=fc', 'train.criterion=cross-entropy', 'train.distil_alpha=0.5', 'train.distil_tau=3', 'train.distil_teacher=va9swnif', 'train.distil_type=soft', 'train.lr_scheduler_type=linear_decay_with_warmup', 'train.mixup=0.5', 'train.weight_decay=0.04711764466423346', '++train.resume=2vdnh7xm', '++train.project=noname']
Traceback (most recent call last):
  File "/home/imkbsz/workspace/eeg_analysis/run_train.py", line 175, in my_app
    mp.spawn(prepare_and_run_train,
  File "/home/imkbsz/anaconda3/envs/eeg/lib/python3.9/site-packages/torch/multiprocessing/spawn.py", line 240, in spawn
    return start_processes(fn, args, nprocs, join, daemon, start_method='spawn')
  File "/home/imkbsz/anaconda3/envs/eeg/lib/python3.9/site-packages/torch/multiprocessing/spawn.py", line 198, in start_processes
    while not context.join():
  File "/home/imkbsz/anaconda3/envs/eeg/lib/python3.9/site-packages/torch/multiprocessing/spawn.py", line 160, in join
    raise ProcessRaisedException(msg, error_index, failed_process.pid)
torch.multiprocessing.spawn.ProcessRaisedException: 

-- Process 0 terminated with the following error:
Traceback (most recent call last):
  File "/home/imkbsz/anaconda3/envs/eeg/lib/python3.9/site-packages/torch/multiprocessing/spawn.py", line 69, in _wrap
    fn(i, *args)
  File "/home/imkbsz/workspace/eeg_analysis/run_train.py", line 124, in prepare_and_run_train
    model_teacher.module.load_state_dict(ckpt['model_state'])
  File "/home/imkbsz/anaconda3/envs/eeg/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1185, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'ResNet1D' object has no attribute 'module'


Set the environment variable HYDRA_FULL_ERROR=1 for a complete stack trace.

******************************    Configurations for Train    ******************************

{'EKG': 'O',
 '_target_': 'models.vit.vit_b_16',
 'activation': 'relu',
 'age_mean': tensor([71.0482]),
 'age_std': tensor([9.1175]),
 'attention_dropout': 0.1,
 'awgn': 0.09493020189676876,
 'awgn_age': 0.08620705992052446,
 'base_lr': 0.0001,
 'class_label_to_name': ['Normal', 'MCI', 'Dementia'],
 'class_name_to_label': {'Dementia': 2, 'MCI': 1, 'Normal': 0},
 'clip_grad_norm': 1.0,
 'criterion': 'cross-entropy',
 'crop_multiple': 4,
 'crop_timing_analysis': False,
 'cwd': '/home/imkbsz/workspace/eeg_analysis',
 'dataset_name': 'CAUEEG dataset',
 'dataset_path': 'local/dataset/caueeg-dataset/',
 'ddp': True,
 'ddp_size': 4,
 'device': device(type='cuda', index=0),
 'distil_alpha': 0.5,
 'distil_tau': 3,
 'distil_teacher': 'va9swnif',
 'distil_teacher_criterion': 'cross-entropy',
 'distil_teacher_model': DistributedDataParallel(
  (module): ResNet1D(
    (input_stage): Sequential(
      (0): Conv1d(20, 64, kernel_size=(41,), stride=(9,), padding=(20,), bias=False)
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
    )
    (conv_stage1): Sequential(
      (0): BottleneckBlock1D(
        (conv1): Conv1d(64, 128, kernel_size=(1,), stride=(1,), bias=False)
        (norm1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU()
        (conv2): Conv1d(128, 128, kernel_size=(9,), stride=(2,), padding=(4,), groups=32, bias=False)
        (norm2): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU()
        (conv3): Conv1d(128, 256, kernel_size=(1,), stride=(1,), bias=False)
        (norm3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU()
        (downsample): Sequential(
          (0): Conv1d(64, 256, kernel_size=(1,), stride=(2,), bias=False)
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock1D(
        (conv1): Conv1d(256, 128, kernel_size=(1,), stride=(1,), bias=False)
        (norm1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU()
        (conv2): Conv1d(128, 128, kernel_size=(9,), stride=(1,), padding=(4,), groups=32, bias=False)
        (norm2): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU()
        (conv3): Conv1d(128, 256, kernel_size=(1,), stride=(1,), bias=False)
        (norm3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU()
      )
      (2): BottleneckBlock1D(
        (conv1): Conv1d(256, 128, kernel_size=(1,), stride=(1,), bias=False)
        (norm1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU()
        (conv2): Conv1d(128, 128, kernel_size=(9,), stride=(1,), padding=(4,), groups=32, bias=False)
        (norm2): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU()
        (conv3): Conv1d(128, 256, kernel_size=(1,), stride=(1,), bias=False)
        (norm3): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU()
      )
    )
    (conv_stage2): Sequential(
      (0): BottleneckBlock1D(
        (conv1): Conv1d(256, 256, kernel_size=(1,), stride=(1,), bias=False)
        (norm1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU()
        (conv2): Conv1d(256, 256, kernel_size=(9,), stride=(2,), padding=(4,), groups=32, bias=False)
        (norm2): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU()
        (conv3): Conv1d(256, 512, kernel_size=(1,), stride=(1,), bias=False)
        (norm3): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU()
        (downsample): Sequential(
          (0): Conv1d(256, 512, kernel_size=(1,), stride=(2,), bias=False)
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock1D(
        (conv1): Conv1d(512, 256, kernel_size=(1,), stride=(1,), bias=False)
        (norm1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU()
        (conv2): Conv1d(256, 256, kernel_size=(9,), stride=(1,), padding=(4,), groups=32, bias=False)
        (norm2): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU()
        (conv3): Conv1d(256, 512, kernel_size=(1,), stride=(1,), bias=False)
        (norm3): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU()
      )
      (2): BottleneckBlock1D(
        (conv1): Conv1d(512, 256, kernel_size=(1,), stride=(1,), bias=False)
        (norm1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU()
        (conv2): Conv1d(256, 256, kernel_size=(9,), stride=(1,), padding=(4,), groups=32, bias=False)
        (norm2): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU()
        (conv3): Conv1d(256, 512, kernel_size=(1,), stride=(1,), bias=False)
        (norm3): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU()
      )
      (3): BottleneckBlock1D(
        (conv1): Conv1d(512, 256, kernel_size=(1,), stride=(1,), bias=False)
        (norm1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU()
        (conv2): Conv1d(256, 256, kernel_size=(9,), stride=(1,), padding=(4,), groups=32, bias=False)
        (norm2): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU()
        (conv3): Conv1d(256, 512, kernel_size=(1,), stride=(1,), bias=False)
        (norm3): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU()
      )
    )
    (conv_stage3): Sequential(
      (0): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (1): BottleneckBlock1D(
        (conv1): Conv1d(512, 512, kernel_size=(1,), stride=(1,), bias=False)
        (norm1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU()
        (conv2): Conv1d(512, 512, kernel_size=(9,), stride=(2,), padding=(4,), groups=32, bias=False)
        (norm2): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU()
        (conv3): Conv1d(512, 1024, kernel_size=(1,), stride=(1,), bias=False)
        (norm3): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU()
        (downsample): Sequential(
          (0): Conv1d(512, 1024, kernel_size=(1,), stride=(2,), bias=False)
          (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock1D(
        (conv1): Conv1d(1024, 512, kernel_size=(1,), stride=(1,), bias=False)
        (norm1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU()
        (conv2): Conv1d(512, 512, kernel_size=(9,), stride=(1,), padding=(4,), groups=32, bias=False)
        (norm2): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU()
        (conv3): Conv1d(512, 1024, kernel_size=(1,), stride=(1,), bias=False)
        (norm3): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU()
      )
      (3): BottleneckBlock1D(
        (conv1): Conv1d(1024, 512, kernel_size=(1,), stride=(1,), bias=False)
        (norm1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU()
        (conv2): Conv1d(512, 512, kernel_size=(9,), stride=(1,), padding=(4,), groups=32, bias=False)
        (norm2): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU()
        (conv3): Conv1d(512, 1024, kernel_size=(1,), stride=(1,), bias=False)
        (norm3): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU()
      )
      (4): BottleneckBlock1D(
        (conv1): Conv1d(1024, 512, kernel_size=(1,), stride=(1,), bias=False)
        (norm1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU()
        (conv2): Conv1d(512, 512, kernel_size=(9,), stride=(1,), padding=(4,), groups=32, bias=False)
        (norm2): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU()
        (conv3): Conv1d(512, 1024, kernel_size=(1,), stride=(1,), bias=False)
        (norm3): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU()
      )
      (5): BottleneckBlock1D(
        (conv1): Conv1d(1024, 512, kernel_size=(1,), stride=(1,), bias=False)
        (norm1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU()
        (conv2): Conv1d(512, 512, kernel_size=(9,), stride=(1,), padding=(4,), groups=32, bias=False)
        (norm2): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU()
        (conv3): Conv1d(512, 1024, kernel_size=(1,), stride=(1,), bias=False)
        (norm3): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU()
      )
      (6): BottleneckBlock1D(
        (conv1): Conv1d(1024, 512, kernel_size=(1,), stride=(1,), bias=False)
        (norm1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU()
        (conv2): Conv1d(512, 512, kernel_size=(9,), stride=(1,), padding=(4,), groups=32, bias=False)
        (norm2): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU()
        (conv3): Conv1d(512, 1024, kernel_size=(1,), stride=(1,), bias=False)
        (norm3): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU()
      )
    )
    (conv_stage4): Sequential(
      (0): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (1): BottleneckBlock1D(
        (conv1): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,), bias=False)
        (norm1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU()
        (conv2): Conv1d(1024, 1024, kernel_size=(9,), stride=(2,), padding=(4,), groups=32, bias=False)
        (norm2): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU()
        (conv3): Conv1d(1024, 2048, kernel_size=(1,), stride=(1,), bias=False)
        (norm3): BatchNorm1d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU()
        (downsample): Sequential(
          (0): Conv1d(1024, 2048, kernel_size=(1,), stride=(2,), bias=False)
          (1): BatchNorm1d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock1D(
        (conv1): Conv1d(2048, 1024, kernel_size=(1,), stride=(1,), bias=False)
        (norm1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU()
        (conv2): Conv1d(1024, 1024, kernel_size=(9,), stride=(1,), padding=(4,), groups=32, bias=False)
        (norm2): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU()
        (conv3): Conv1d(1024, 2048, kernel_size=(1,), stride=(1,), bias=False)
        (norm3): BatchNorm1d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU()
      )
      (3): BottleneckBlock1D(
        (conv1): Conv1d(2048, 1024, kernel_size=(1,), stride=(1,), bias=False)
        (norm1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU()
        (conv2): Conv1d(1024, 1024, kernel_size=(9,), stride=(1,), padding=(4,), groups=32, bias=False)
        (norm2): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU()
        (conv3): Conv1d(1024, 2048, kernel_size=(1,), stride=(1,), bias=False)
        (norm3): BatchNorm1d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU()
      )
    )
    (final_pool): AdaptiveAvgPool1d(output_size=1)
    (fc_stage): Sequential(
      (0): Sequential(
        (0): Linear(in_features=2049, out_features=1024, bias=False)
        (1): Dropout(p=0.12299636817829414, inplace=False)
        (2): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU()
      )
      (1): Sequential(
        (0): Linear(in_features=1024, out_features=512, bias=False)
        (1): Dropout(p=0.12299636817829414, inplace=False)
        (2): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU()
      )
      (2): Sequential(
        (0): Linear(in_features=512, out_features=256, bias=False)
        (1): Dropout(p=0.12299636817829414, inplace=False)
        (2): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU()
      )
      (3): Linear(in_features=256, out_features=3, bias=True)
    )
  )
),
 'distil_teacher_preprocess': Sequential(
  (0): EegToDevice(device=cuda)
  (1): EegNormalizeAge(mean=tensor([71.1417], device='cuda:0'),std=tensor([9.7840], device='cuda:0'),eps=1e-08)
  (2): EegNormalizeMeanStd(mean=tensor([-0.0453,  0.0196,  0.0131,  0.0171,  0.0080, -0.0549,  0.0111,  0.0065,
          -0.0132, -0.0239, -0.0009,  0.0088,  0.0002,  0.0081,  0.0288, -0.0391,
           0.0087,  0.0059,  0.0073,  0.0029], device='cuda:0'),std=tensor([49.8489, 21.7394, 12.5712, 12.7670, 17.1064, 53.6895, 21.3424, 11.2216,
          12.6079, 17.2831, 21.9766, 15.2366, 14.7940, 23.2895, 18.7805, 16.1045,
          20.7859, 12.0627, 12.3892, 94.3882], device='cuda:0'),eps=1e-08)
),
 'distil_type': 'soft',
 'draw_result': True,
 'dropout': 0.12942536534224264,
 'fc_stages': 2,
 'file_format': 'memmap',
 'in_channels': 40,
 'input_norm': 'dataset',
 'latency': 2000,
 'load_event': False,
 'lr_scheduler_type': 'linear_decay_with_warmup',
 'mgn': 0.04061231182489346,
 'minibatch': 48,
 'minibatch_3090': 48,
 'mixed_precision': True,
 'mixup': 0.5,
 'model': '2D-ViT-B-16',
 'multi_batch_size': 6,
 'num_history': 500,
 'num_params': 86153859,
 'out_dims': 3,
 'output_length': 241,
 'photic': 'X',
 'preprocess_test': Sequential(
  (0): EegToDevice(device=cuda:0)
  (1): EegNormalizeAge(mean=tensor([71.0482]),std=tensor([9.1175]),eps=1e-08)
  (2): EegNormalizeMeanStd(mean=tensor([-0.1447, -0.1416, -0.0018,  0.0553, -0.0471,  0.1618, -0.0411, -0.0215,
          -0.0217, -0.0074,  0.1718, -0.0198, -0.0431, -0.0729,  0.0623, -0.0666,
           0.0888,  0.0066,  0.0210,  0.0105]),std=tensor([43.6483, 19.6748, 11.4544, 11.2452, 14.8973, 46.9557, 19.0862, 10.1997,
          11.3862, 15.9813, 20.9511, 14.8437, 13.6420, 21.2389, 16.3527, 14.4223,
          20.6177, 11.2345, 11.5380, 92.2076]),eps=1e-08)
  (3): EegSpectrogram(n_fft=126, complex_mode=as_real, stft_kwargs={'hop_length': 32})
  (4): EegNormalizeMeanStd(mean=tensor([[ 7.1200e-01, -1.8478e-03, -1.0165e-03,  ...,  4.0804e-04,
            3.2384e-04,  1.0885e-02],
          [ 3.1208e-01, -5.3650e-03, -3.4012e-04,  ...,  1.7471e-04,
            4.3095e-04,  1.1467e-03],
          [ 4.7802e-01,  5.2787e-04, -1.8495e-03,  ...,  1.7843e-03,
            2.0860e-03, -9.3897e-03],
          ...,
          [ 0.0000e+00,  3.3407e-02,  1.2478e-02,  ..., -5.4295e-04,
           -1.9966e-04, -2.3172e-10],
          [ 0.0000e+00,  2.1846e-02,  3.6218e-04,  ..., -9.2814e-05,
           -5.0902e-04,  8.9430e-11],
          [ 0.0000e+00, -7.7435e-03, -5.4605e-04,  ...,  4.7595e-04,
            1.0444e-03, -1.0886e-10]], device='cuda:0'),std=tensor([[1.0230e+02, 1.6202e+01, 7.9268e+00,  ..., 1.0224e+00, 1.0257e+00,
           1.3172e+00],
          [1.0311e+02, 1.4681e+01, 7.7072e+00,  ..., 1.0291e+00, 1.0310e+00,
           1.3234e+00],
          [9.8592e+01, 1.3254e+01, 8.1443e+00,  ..., 1.0644e+00, 1.0675e+00,
           1.3665e+00],
          ...,
          [0.0000e+00, 2.1944e+01, 1.2897e+01,  ..., 8.7707e-01, 8.7442e-01,
           1.1150e-07],
          [0.0000e+00, 2.3221e+01, 1.3010e+01,  ..., 8.7401e-01, 8.8091e-01,
           1.0069e-07],
          [0.0000e+00, 1.9180e+01, 2.2474e+01,  ..., 8.3594e-01, 8.3901e-01,
           1.8286e-07]], device='cuda:0'),eps=1e-08)
),
 'preprocess_train': Sequential(
  (0): EegToDevice(device=cuda:0)
  (1): EegNormalizeAge(mean=tensor([71.0482], device='cuda:0'),std=tensor([9.1175]),eps=1e-08)
  (2): EegAddGaussianNoiseAge(mean=0.0,std=0.08620705992052446)
  (3): EegNormalizeMeanStd(mean=tensor([-0.1447, -0.1416, -0.0018,  0.0553, -0.0471,  0.1618, -0.0411, -0.0215,
          -0.0217, -0.0074,  0.1718, -0.0198, -0.0431, -0.0729,  0.0623, -0.0666,
           0.0888,  0.0066,  0.0210,  0.0105], device='cuda:0'),std=tensor([43.6483, 19.6748, 11.4544, 11.2452, 14.8973, 46.9557, 19.0862, 10.1997,
          11.3862, 15.9813, 20.9511, 14.8437, 13.6420, 21.2389, 16.3527, 14.4223,
          20.6177, 11.2345, 11.5380, 92.2076]),eps=1e-08)
  (4): EegMultiplicativeGaussianNoise(mean=0.0,std=0.04061231182489346)
  (5): EegAdditiveGaussianNoise(mean=0.0,std=0.09493020189676876)
  (6): EegSpectrogram(n_fft=126, complex_mode=as_real, stft_kwargs={'hop_length': 32})
  (7): EegNormalizeMeanStd(mean=tensor([[ 7.1200e-01, -1.8478e-03, -1.0165e-03,  ...,  4.0804e-04,
            3.2384e-04,  1.0885e-02],
          [ 3.1208e-01, -5.3650e-03, -3.4012e-04,  ...,  1.7471e-04,
            4.3095e-04,  1.1467e-03],
          [ 4.7802e-01,  5.2787e-04, -1.8495e-03,  ...,  1.7843e-03,
            2.0860e-03, -9.3897e-03],
          ...,
          [ 0.0000e+00,  3.3407e-02,  1.2478e-02,  ..., -5.4295e-04,
           -1.9966e-04, -2.3172e-10],
          [ 0.0000e+00,  2.1846e-02,  3.6218e-04,  ..., -9.2814e-05,
           -5.0902e-04,  8.9430e-11],
          [ 0.0000e+00, -7.7435e-03, -5.4605e-04,  ...,  4.7595e-04,
            1.0444e-03, -1.0886e-10]], device='cuda:0'),std=tensor([[1.0230e+02, 1.6202e+01, 7.9268e+00,  ..., 1.0224e+00, 1.0257e+00,
           1.3172e+00],
          [1.0311e+02, 1.4681e+01, 7.7072e+00,  ..., 1.0291e+00, 1.0310e+00,
           1.3234e+00],
          [9.8592e+01, 1.3254e+01, 8.1443e+00,  ..., 1.0644e+00, 1.0675e+00,
           1.3665e+00],
          ...,
          [0.0000e+00, 2.1944e+01, 1.2897e+01,  ..., 8.7707e-01, 8.7442e-01,
           1.1150e-07],
          [0.0000e+00, 2.3221e+01, 1.3010e+01,  ..., 8.7401e-01, 8.8091e-01,
           1.0069e-07],
          [0.0000e+00, 1.9180e+01, 2.2474e+01,  ..., 8.3594e-01, 8.3901e-01,
           1.8286e-07]], device='cuda:0'),eps=1e-08)
),
 'run_mode': 'train',
 'save_model': True,
 'search_lr': True,
 'search_multiplier': 1.0,
 'seed': 0,
 'seq_len_2d': (64, 63),
 'seq_length': 2000,
 'signal_2d_mean': tensor([[[[ 7.1200e-01],
          [-1.8478e-03],
          [-1.0165e-03],
          ...,
          [ 4.0804e-04],
          [ 3.2384e-04],
          [ 1.0885e-02]],

         [[ 3.1208e-01],
          [-5.3650e-03],
          [-3.4012e-04],
          ...,
          [ 1.7471e-04],
          [ 4.3095e-04],
          [ 1.1467e-03]],

         [[ 4.7802e-01],
          [ 5.2787e-04],
          [-1.8495e-03],
          ...,
          [ 1.7843e-03],
          [ 2.0860e-03],
          [-9.3897e-03]],

         ...,

         [[ 0.0000e+00],
          [ 3.3407e-02],
          [ 1.2478e-02],
          ...,
          [-5.4295e-04],
          [-1.9966e-04],
          [-2.3172e-10]],

         [[ 0.0000e+00],
          [ 2.1846e-02],
          [ 3.6218e-04],
          ...,
          [-9.2814e-05],
          [-5.0902e-04],
          [ 8.9430e-11]],

         [[ 0.0000e+00],
          [-7.7435e-03],
          [-5.4605e-04],
          ...,
          [ 4.7595e-04],
          [ 1.0444e-03],
          [-1.0886e-10]]]], device='cuda:0'),
 'signal_2d_std': tensor([[[[1.0230e+02],
          [1.6202e+01],
          [7.9268e+00],
          ...,
          [1.0224e+00],
          [1.0257e+00],
          [1.3172e+00]],

         [[1.0311e+02],
          [1.4681e+01],
          [7.7072e+00],
          ...,
          [1.0291e+00],
          [1.0310e+00],
          [1.3234e+00]],

         [[9.8592e+01],
          [1.3254e+01],
          [8.1443e+00],
          ...,
          [1.0644e+00],
          [1.0675e+00],
          [1.3665e+00]],

         ...,

         [[0.0000e+00],
          [2.1944e+01],
          [1.2897e+01],
          ...,
          [8.7707e-01],
          [8.7442e-01],
          [1.1150e-07]],

         [[0.0000e+00],
          [2.3221e+01],
          [1.3010e+01],
          ...,
          [8.7401e-01],
          [8.8091e-01],
          [1.0069e-07]],

         [[0.0000e+00],
          [1.9180e+01],
          [2.2474e+01],
          ...,
          [8.3594e-01],
          [8.3901e-01],
          [1.8286e-07]]]], device='cuda:0'),
 'signal_header': ['Fp1-AVG',
                   'F3-AVG',
                   'C3-AVG',
                   'P3-AVG',
                   'O1-AVG',
                   'Fp2-AVG',
                   'F4-AVG',
                   'C4-AVG',
                   'P4-AVG',
                   'O2-AVG',
                   'F7-AVG',
                   'T3-AVG',
                   'T5-AVG',
                   'F8-AVG'Error executing job with overrides: ['data=caueeg-dementia', 'train=ddp-amp-gradclip-distillation', 'data.EKG=O', 'data.awgn=0.09493020189676876', 'data.awgn_age=0.08620705992052446', 'data.mgn=0.04061231182489346', 'data.photic=X', 'data.seq_length=2000', 'model=2D-ViT-B-16', 'model.activation=relu', 'model.dropout=0.12942536534224264', 'model.fc_stages=2', 'model.use_age=fc', 'train.criterion=cross-entropy', 'train.distil_alpha=0.5', 'train.distil_tau=3', 'train.distil_teacher=va9swnif', 'train.distil_type=soft', 'train.lr_scheduler_type=linear_decay_with_warmup', 'train.mixup=0.5', 'train.weight_decay=0.04711764466423346']
Traceback (most recent call last):
  File "/home/imkbsz/workspace/eeg_analysis/run_train.py", line 182, in my_app
    mp.spawn(prepare_and_run_train,
  File "/home/imkbsz/anaconda3/envs/eeg/lib/python3.9/site-packages/torch/multiprocessing/spawn.py", line 240, in spawn
    return start_processes(fn, args, nprocs, join, daemon, start_method='spawn')
  File "/home/imkbsz/anaconda3/envs/eeg/lib/python3.9/site-packages/torch/multiprocessing/spawn.py", line 198, in start_processes
    while not context.join():
  File "/home/imkbsz/anaconda3/envs/eeg/lib/python3.9/site-packages/torch/multiprocessing/spawn.py", line 160, in join
    raise ProcessRaisedException(msg, error_index, failed_process.pid)
torch.multiprocessing.spawn.ProcessRaisedException: 

-- Process 1 terminated with the following error:
Traceback (most recent call last):
  File "/home/imkbsz/anaconda3/envs/eeg/lib/python3.9/site-packages/torch/multiprocessing/spawn.py", line 69, in _wrap
    fn(i, *args)
  File "/home/imkbsz/workspace/eeg_analysis/run_train.py", line 162, in prepare_and_run_train
    train_script(config, model, train_loader, val_loader, test_loader, multicrop_test_loader,
  File "/home/imkbsz/workspace/eeg_analysis/train/train_script.py", line 95, in train_script
    config['base_lr'], lr_search = learning_rate_search(config=config, model=model,
  File "/home/imkbsz/workspace/eeg_analysis/train/train_script.py", line 43, in learning_rate_search
    train_multistep(model, train_loader, preprocess_train, optimizer, scheduler, amp_scaler, config, steps)
  File "/home/imkbsz/workspace/eeg_analysis/train/train_core.py", line 65, in train_multistep
    teacher_output = compute_feature_embedding(config['distil_teacher_model'], sample_batched_distil,
  File "/home/imkbsz/anaconda3/envs/eeg/lib/python3.9/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "/home/imkbsz/workspace/eeg_analysis/train/evaluate.py", line 19, in compute_feature_embedding
    output = model.compute_feature_embedding(x, age, target_from_last=target_from_last)
  File "/home/imkbsz/anaconda3/envs/eeg/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1185, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'DistributedDataParallel' object has no attribute 'compute_feature_embedding'


Set the environment variable HYDRA_FULL_ERROR=1 for a complete stack trace.
